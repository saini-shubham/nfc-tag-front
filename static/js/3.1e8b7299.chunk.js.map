{"version":3,"sources":["assets/images/users/user1.jpg","components/dashboard/Blog.js","assets/images/bg/bg1.jpg","assets/images/bg/bg2.jpg","assets/images/bg/bg3.jpg","assets/images/bg/bg4.jpg","assets/images/users/user2.jpg","assets/images/users/user3.jpg","assets/images/users/user4.jpg","assets/images/users/user5.jpg","components/dashboard/ProjectTable.js","components/dashboard/SalesChart.js","components/dashboard/Feeds.js","components/dashboard/TopCards.js","spinner.gif","context.js","components/Scanner/Scanner.js","components/Scan.js","views/Starter.js"],"names":["Blog","props","alt","src","image","className","tag","title","subtitle","text","color","tableData","avatar","user1","name","email","project","status","weeks","budget","user2","user3","user4","user5","ProjectTables","responsive","borderless","map","tdata","index","width","height","SalesChart","chartoptions","series","data","options","chart","type","dataLabels","enabled","grid","strokeDashArray","stroke","curve","xaxis","categories","FeedData","icon","date","Feeds","flush","feed","action","href","size","TopCards","bg","earning","ActionsContext","createContext","scan","write","setActions","Scanner","useContext","actions","onClick","Spinner","Scan","useState","setMessage","serialNumber","setSerialNumber","useCallback","window","ndef","NDEFReader","console","log","onreadingerror","onreading","event","onReading","message","records","record","recordType","textDecoder","TextDecoder","encoding","decode","useEffect","BlogData","bg1","description","btnbg","bg2","bg3","bg4","Starter","navigate","useNavigate","useDispatch","setTagScanStatus","tagStatus","useSelector","state","tagDetails","tagScanStatus","actionsValue","sm","lg","ComponentCard","onHandleAction","xl","xxl","ProjectTable","blg","Provider","value"],"mappings":"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","file":"static/js/3.1e8b7299.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user1.f3714f33.jpg\";","import {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Blog = (props) => {\r\n  return (\r\n    <Card>\r\n      <CardImg alt=\"Card image cap\" src={props.image} />\r\n      <CardBody className=\"p-4\">\r\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\r\n        <CardText className=\"mt-3\">{props.text}</CardText>\r\n        <Button color={props.color}>Read More</Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","export default __webpack_public_path__ + \"static/media/bg1.537e9bd5.jpg\";","export default __webpack_public_path__ + \"static/media/bg2.94ab4b60.jpg\";","export default __webpack_public_path__ + \"static/media/bg3.5668e1f0.jpg\";","export default __webpack_public_path__ + \"static/media/bg4.62319dde.jpg\";","export default __webpack_public_path__ + \"static/media/user2.ddd14b39.jpg\";","export default __webpack_public_path__ + \"static/media/user3.a57a5165.jpg\";","export default __webpack_public_path__ + \"static/media/user4.6ac95ef9.jpg\";","export default __webpack_public_path__ + \"static/media/user5.847ea5a9.jpg\";","import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\r\nimport user1 from \"../../assets/images/users/user1.jpg\";\r\nimport user2 from \"../../assets/images/users/user2.jpg\";\r\nimport user3 from \"../../assets/images/users/user3.jpg\";\r\nimport user4 from \"../../assets/images/users/user4.jpg\";\r\nimport user5 from \"../../assets/images/users/user5.jpg\";\r\n\r\nconst tableData = [\r\n  {\r\n    avatar: user1,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user2,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Lading pro React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user3,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Elite React\",\r\n    status: \"holt\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user4,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n];\r\n\r\nconst ProjectTables = () => {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Project Listing</CardTitle>\r\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n            Overview of the projects\r\n          </CardSubtitle>\r\n\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Team Lead</th>\r\n                <th>Project</th>\r\n\r\n                <th>Status</th>\r\n                <th>Weeks</th>\r\n                <th>Budget</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((tdata, index) => (\r\n                <tr key={index} className=\"border-top\">\r\n                  <td>\r\n                    <div className=\"d-flex align-items-center p-2\">\r\n                      <img\r\n                        src={tdata.avatar}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\r\n                        <span className=\"text-muted\">{tdata.email}</span>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{tdata.project}</td>\r\n                  <td>\r\n                    {tdata.status === \"pending\" ? (\r\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : tdata.status === \"holt\" ? (\r\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : (\r\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\r\n                    )}\r\n                  </td>\r\n                  <td>{tdata.weeks}</td>\r\n                  <td>{tdata.budget}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst SalesChart = () => {\r\n  const chartoptions = {\r\n    series: [\r\n      {\r\n        name: \"Iphone 13\",\r\n        data: [0, 31, 40, 28, 51, 42, 109, 100],\r\n      },\r\n      {\r\n        name: \"Oneplue 9\",\r\n        data: [0, 11, 32, 45, 32, 34, 52, 41],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"area\",\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      grid: {\r\n        strokeDashArray: 3,\r\n      },\r\n\r\n      stroke: {\r\n        curve: \"smooth\",\r\n        width: 1,\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"Aug\",\r\n        ],\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Sales Summary</CardTitle>\r\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\r\n          Yearly Sales Report\r\n        </CardSubtitle>\r\n        <Chart\r\n          type=\"area\"\r\n          width=\"100%\"\r\n          height=\"390\"\r\n          options={chartoptions.options}\r\n          series={chartoptions.series}\r\n        ></Chart>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst FeedData = [\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"primary\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New user registered.\",\r\n    icon: \"bi bi-person\",\r\n    color: \"info\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"danger\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New order received.\",\r\n    icon: \"bi bi-bag-check\",\r\n    color: \"success\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"dark\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"warning\",\r\n    date: \"6 minute ago\",\r\n  },\r\n];\r\n\r\nconst Feeds = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Feeds</CardTitle>\r\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n          Widget you can use\r\n        </CardSubtitle>\r\n        <ListGroup flush className=\"mt-4\">\r\n          {FeedData.map((feed, index) => (\r\n            <ListGroupItem\r\n              key={index}\r\n              action\r\n              href=\"/\"\r\n              tag=\"a\"\r\n              className=\"d-flex align-items-center p-3 border-0\"\r\n            >\r\n              <Button\r\n                className=\"rounded-circle me-3\"\r\n                size=\"sm\"\r\n                color={feed.color}\r\n              >\r\n                <i className={feed.icon}></i>\r\n              </Button>\r\n              {feed.title}\r\n              <small className=\"ms-auto text-muted text-small\">\r\n                {feed.date}\r\n              </small>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import { Card, CardBody } from \"reactstrap\";\r\n\r\nconst TopCards = (props) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"d-flex\">\r\n          <div className={`circle-box lg-box d-inline-block ${props.bg}`}>\r\n            <i className={props.icon}></i>\r\n          </div>\r\n          <div className=\"ms-3\">\r\n            <h3 className=\"mb-0 font-weight-bold\">{props.earning}</h3>\r\n            <small className=\"text-muted\">{props.subtitle}</small>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TopCards;\r\n","export default __webpack_public_path__ + \"static/media/spinner.e8697d57.gif\";","import { createContext } from \"react\";\n\nexport const ActionsContext = createContext(\n    {\n        scan: null,\n        write: null,\n        setActions:()=>{}\n    }\n);","import React, { useContext } from 'react';\nimport './Scanner.css'\nimport Spinner from '../../spinner.gif';\nimport { ActionsContext } from '../../context';\n\nconst Scanner = () => {\n  const { actions, setActions} = useContext(ActionsContext);\n    return (\n      <div className=\"scanner\">\n        <p className=\"scanner-exit\" onClick={()=>setActions({...actions, scan: null})}>X</p>\n        <div className=\"scanner-container\">\n          <img src={Spinner} alt=\"spinning log\" className=\"scanner-image\"/>\n          <p className=\"scanner-text\">\n            Scanning...\n          </p>\n        </div>\n      </div>\n    );\n};\n\nexport default Scanner;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useContext, useEffect } from 'react';\n// import './Scanner.css'\n// import Spinner from '../../spinner.gif';\n\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { tagAction } from '../../store/tagSlice';\n\n// const Scanner = (props) => {\n//   const tagScanStatus= useSelector(state => state.tagDetails.tagScanStatus)\n\n\n//   useEffect(()=>{\n//     console.log(\"inscanner.js file\")\n//   },[])\n//   const dispatch=useDispatch();\n//     return (\n//       <div className=\"scanner\">\n//         <p className=\"scanner-exit\" onClick={()=> dispatch(tagAction.setTagScanStatus(false))}>X</p>\n//         <div className=\"scanner-container\">\n//           <img src={Spinner} alt=\"spinning log\" className=\"scanner-image\"/>\n//           <p className=\"scanner-text\">\n//             Scanning...\n//           </p>\n//         </div>\n//       </div>\n//     );\n// };\n\n// export default Scanner;","\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport Scanner from '../components/Scanner/Scanner';\r\nimport { ActionsContext } from '../context';\r\n\r\nconst Scan = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [serialNumber, setSerialNumber] = useState('');\r\n    const { actions, setActions} = useContext(ActionsContext);\r\n\r\n    const scan = useCallback(async() => {\r\n        if ('NDEFReader' in window) { \r\n            try {\r\n                const ndef = new window.NDEFReader();\r\n                await ndef.scan();\r\n                \r\n                console.log(\"Scan started successfully.\");\r\n                ndef.onreadingerror = () => {\r\n                    console.log(\"Cannot read data from the NFC tag. Try another one?\");\r\n                };\r\n                \r\n                ndef.onreading = event => {\r\n                    console.log(\"NDEF message read.\");\r\n                    onReading(event);\r\n                    setActions({\r\n                        scan: 'scanned',\r\n                        write: null\r\n                    });\r\n                };\r\n\r\n            } catch(error){\r\n                console.log(`Error! Scan failed to start: ${error}.`);\r\n            };\r\n        }\r\n    },[setActions]);\r\n\r\n    const onReading = ({message, serialNumber}) => {\r\n        setSerialNumber(serialNumber);\r\n        for (const record of message.records) {\r\n            switch (record.recordType) {\r\n                case \"text\":\r\n                    const textDecoder = new TextDecoder(record.encoding);\r\n                    setMessage(textDecoder.decode(record.data));\r\n                    break;\r\n                case \"url\":\r\n                    // TODO: Read URL record with record data.\r\n                    break;\r\n                default:\r\n                    // TODO: Handle other records with record data.\r\n                }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        scan();\r\n    }, [scan]);\r\n\r\n    return(\r\n        <>\r\n            {actions.scan === 'scanned' ?  \r\n            <div>\r\n                <p>Serial Number: {serialNumber}</p>\r\n                {/* <p>Message: {message}</p> */}\r\n            </div>\r\n            : <Scanner status={actions.scan}></Scanner> }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Scan;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useCallback, useContext, useEffect, useState } from 'react';\r\n// import Scanner from './Scanner/Scanner';\r\n\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { tagAction } from '../store/tagSlice';\r\n// const Scan = () => {\r\n//     const [message, setMessage] = useState('Scanned');\r\n//     const [serialNumber, setSerialNumber] = useState('');\r\n//     const { actions, setActions} = useState(false)\r\n//     //const tagScanStatus= useSelector(state => state.tagDetails.tagScanStatus)\r\n//     const dispatch = useDispatch()\r\n\r\n\r\n//     const scan = useCallback(async() => {\r\n//         console.log(\"scannig started\")\r\n//         if ('NDEFReader' in window) { \r\n//             try {\r\n//                 const ndef = new window.NDEFReader();\r\n//                 await ndef.scan();\r\n                \r\n//                 console.log(\"Scan started successfully.\");\r\n//                 alert(\"Scan started successfully.\");\r\n//                 ndef.onreadingerror = () => {\r\n//                     console.log(\"Cannot read data from the NFC tag. Try another one?\");\r\n//                     //alert(\"Cannot read data from the NFC tag. Try another one?\");\r\n//                 };\r\n                \r\n//                 ndef.onreading = event => {\r\n//                     console.log(\"NDEF message read.\");\r\n//                     onReading(event);\r\n//                     //dispatch(tagAction.setTagScanStatus(true))\r\n//                     setActions(true);\r\n//                 };\r\n\r\n//             } catch(error){\r\n//                 console.log(`Error! Scan failed to start: ${error}.`);\r\n//             };\r\n//         }\r\n//     //},[tagScanStatus]);\r\n//     },[actions]);\r\n\r\n//     const onReading = ({message, serialNumber}) => {\r\n//         // alert(\"hi\")\r\n//         // alert(serialNumber)\r\n//         setSerialNumber(serialNumber);\r\n//         // for (const record of message.records) {\r\n//         //     switch (record.recordType) {\r\n//         //         case \"text\":\r\n//         //             const textDecoder = new TextDecoder(record.encoding);\r\n//         //             setMessage(textDecoder.decode(record.data));\r\n//         //             break;\r\n//         //         case \"url\":\r\n//         //             // TODO: Read URL record with record data.\r\n//         //             break;\r\n//         //         default:\r\n//         //             // TODO: Handle other records with record data.\r\n//         //         }\r\n//         // }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         console.log(\"in scan.js\")\r\n//         scan();\r\n//     }, [scan]);\r\n\r\n//     return(\r\n//         <>\r\n//             {/* {tagScanStatus=== true ?   */}\r\n//             {actions === true ?  \r\n//             <div>\r\n//                 <p>Serial Number: {serialNumber}</p>\r\n//                 <p>Message: {message}</p>\r\n//             </div>\r\n//             : <Scanner></Scanner> }\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Scan;\r\n\r\n\r\n","import { Button, Col, Row } from \"reactstrap\";\r\nimport SalesChart from \"../components/dashboard/SalesChart\";\r\nimport Feeds from \"../components/dashboard/Feeds\";\r\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\r\nimport TopCards from \"../components/dashboard/TopCards\";\r\nimport Blog from \"../components/dashboard/Blog\";\r\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\r\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\r\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\r\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\r\nimport ComponentCard from \"../components/ComponentCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { tagAction } from \"../store/tagSlice\";\r\nimport Scan from \"../components/Scan\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ActionsContext } from '../context';\r\nconst BlogData = [\r\n  {\r\n    image: bg1,\r\n    title: \"This is simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg2,\r\n    title: \"Lets be simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg3,\r\n    title: \"Don't Lamp blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg4,\r\n    title: \"Simple is beautiful\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n];\r\n\r\nconst Starter = () => {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch();\r\n  const[tagScanStatus,setTagScanStatus]=useState(false)\r\n  const tagStatus = useSelector((state)=>state.tagDetails.tagScanStatus);\r\n  \r\n  \r\n  const [actions, setActions] = useState(null);\r\n  const {scan, write} = actions || {};\r\n  const actionsValue = {actions,setActions};\r\n  const onHandleAction = (actions) =>{\r\n    setActions({...actions});\r\n  }\r\n\r\n  useEffect(()=>{\r\n    console.log(tagStatus)\r\n    setTagScanStatus(tagStatus)\r\n  },[tagStatus])\r\n\r\n  return (\r\n    <div>\r\n      {/***Top Cards***/}\r\n      \r\n      <Row>\r\n      <Col sm=\"6\" lg=\"6\">\r\n      <ComponentCard\r\n          title=\"Xtreme React Admin Pro Version\"\r\n          // subtitle={\r\n          //   <p>\r\n          //     5 premium and highly customizable demo variations included in the package, with React\r\n          //     Router 6, Redux Toolkit, Axios nd much more...\r\n          //   </p>\r\n          // }\r\n        >\r\n\r\n          <Row>\r\n            <Col lg=\"8\">\r\n              <div className=\"mt-3\">\r\n                {/* <Button\r\n                  color=\"primary\"\r\n                  //href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\r\n                  //target=\"_blank\"\r\n                  onClick={()=> dispatch(tagAction.setTagScanStatus(true))}\r\n                >\r\n                  Scan\r\n                </Button> */}\r\n                 <Button\r\n                  color=\"primary\"\r\n                  //href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\r\n                  //target=\"_blank\"\r\n                  onClick={()=>onHandleAction({scan: 'scanning', write: null})}\r\n                >\r\n                  Scan\r\n                </Button>\r\n                 {/* <button onClick={()=>onHandleAction({scan: 'scanning', write: null})} className=\"btn\">Scan</button> */}\r\n              </div>\r\n            </Col>\r\n            \r\n          </Row>\r\n        </ComponentCard>\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"6\">\r\n      <ComponentCard\r\n          title=\"Xtreme React Admin Pro Version\"\r\n          // subtitle={\r\n          //   <p>\r\n          //     5 premium and highly customizable demo variations included in the package, with React\r\n          //     Router 6, Redux Toolkit, Axios nd much more...\r\n          //   </p>\r\n          // }\r\n        >\r\n\r\n          <Row>\r\n            <Col lg=\"8\">\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  color=\"primary\"\r\n                 // href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\r\n                  //target=\"_blank\"\r\n                  //onClick={()=>navigate('/tags/register')}\r\n                  onClick={()=>navigate('/tags/register')}\r\n                >\r\n                 Register\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            \r\n          </Row>\r\n        </ComponentCard>\r\n      </Col>\r\n     \r\n      </Row>\r\n\r\n\r\n      \r\n      <Row>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-success text-success\"\r\n            title=\"Profit\"\r\n            subtitle=\"Yearly Earning\"\r\n            earning=\"$21k\"\r\n            icon=\"bi bi-wallet\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-danger text-danger\"\r\n            title=\"Refunds\"\r\n            subtitle=\"Refund given\"\r\n            earning=\"$1k\"\r\n            icon=\"bi bi-coin\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-warning text-warning\"\r\n            title=\"New Project\"\r\n            subtitle=\"Yearly Project\"\r\n            earning=\"456\"\r\n            icon=\"bi bi-basket3\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-info text-into\"\r\n            title=\"Sales\"\r\n            subtitle=\"Weekly Sales\"\r\n            earning=\"210\"\r\n            icon=\"bi bi-bag\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {/***Sales & Feed***/}\r\n      <Row>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\r\n          <SalesChart />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\r\n          <Feeds />\r\n        </Col>\r\n      </Row>\r\n      {/***Table ***/}\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <ProjectTables />\r\n        </Col>\r\n      </Row>\r\n      {/***Blog Cards***/}\r\n      <Row>\r\n        {BlogData.map((blg, index) => (\r\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\r\n            <Blog\r\n              image={blg.image}\r\n              title={blg.title}\r\n              subtitle={blg.subtitle}\r\n              text={blg.description}\r\n              color={blg.btnbg}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <ActionsContext.Provider value={actionsValue}>\r\n          {scan && <Scan/>}\r\n        </ActionsContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Starter;\r\n"],"sourceRoot":""}