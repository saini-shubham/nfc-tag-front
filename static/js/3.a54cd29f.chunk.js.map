{"version":3,"sources":["components/dashboard/Blog.js","assets/images/bg/bg1.jpg","assets/images/bg/bg2.jpg","assets/images/bg/bg3.jpg","assets/images/bg/bg4.jpg","components/dashboard/SalesChart.js","components/dashboard/Feeds.js","components/dashboard/TopCards.js","spinner.gif","context.js","components/Scanner/Scanner.js","components/Scan.js","views/Starter.js"],"names":["Blog","props","alt","src","image","className","tag","title","subtitle","text","color","SalesChart","chartoptions","series","name","data","options","chart","type","dataLabels","enabled","grid","strokeDashArray","stroke","curve","width","xaxis","categories","height","FeedData","icon","date","Feeds","flush","map","feed","index","action","href","size","TopCards","bg","earning","ActionsContext","createContext","scan","write","setActions","Scanner","useContext","actions","onClick","Spinner","Scan","useState","setMessage","setSerialNumber","useCallback","window","ndef","NDEFReader","console","log","onreadingerror","onreading","event","onReading","navigate","useNavigate","message","serialNumber","records","record","recordType","textDecoder","TextDecoder","encoding","decode","useEffect","status","BlogData","bg1","description","btnbg","bg2","bg3","bg4","Starter","useDispatch","setTagScanStatus","tagStatus","useSelector","state","tagDetails","tagScanStatus","actionsValue","onHandleAction","sm","lg","ComponentCard","xl","xxl","ProjectTable","blg","Provider","value"],"mappings":"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","file":"static/js/3.a54cd29f.chunk.js","sourcesContent":["import {\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\n\nconst Blog = (props) => {\n  return (\n    <Card>\n      <CardImg alt=\"Card image cap\" src={props.image} />\n      <CardBody className=\"p-4\">\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\n        <CardText className=\"mt-3\">{props.text}</CardText>\n        <Button color={props.color}>Read More</Button>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/bg1.537e9bd5.jpg\";","export default __webpack_public_path__ + \"static/media/bg2.94ab4b60.jpg\";","export default __webpack_public_path__ + \"static/media/bg3.5668e1f0.jpg\";","export default __webpack_public_path__ + \"static/media/bg4.62319dde.jpg\";","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\n\nconst SalesChart = () => {\n  const chartoptions = {\n    series: [\n      {\n        name: \"Iphone 13\",\n        data: [0, 31, 40, 28, 51, 42, 109, 100],\n      },\n      {\n        name: \"Oneplue 9\",\n        data: [0, 11, 32, 45, 32, 34, 52, 41],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"area\",\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      grid: {\n        strokeDashArray: 3,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 1,\n      },\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"Aug\",\n        ],\n      },\n    },\n  };\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle tag=\"h5\">Sales Summary</CardTitle>\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\n          Yearly Sales Report\n        </CardSubtitle>\n        <Chart\n          type=\"area\"\n          width=\"100%\"\n          height=\"390\"\n          options={chartoptions.options}\n          series={chartoptions.series}\n        ></Chart>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroup,\n  CardSubtitle,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\nconst FeedData = [\n  {\n    title: \"Cras justo odio\",\n    icon: \"bi bi-bell\",\n    color: \"primary\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"New user registered.\",\n    icon: \"bi bi-person\",\n    color: \"info\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Server #1 overloaded.\",\n    icon: \"bi bi-hdd\",\n    color: \"danger\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"New order received.\",\n    icon: \"bi bi-bag-check\",\n    color: \"success\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Cras justo odio\",\n    icon: \"bi bi-bell\",\n    color: \"dark\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Server #1 overloaded.\",\n    icon: \"bi bi-hdd\",\n    color: \"warning\",\n    date: \"6 minute ago\",\n  },\n];\n\nconst Feeds = () => {\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle tag=\"h5\">Feeds</CardTitle>\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n          Widget you can use\n        </CardSubtitle>\n        <ListGroup flush className=\"mt-4\">\n          {FeedData.map((feed, index) => (\n            <ListGroupItem\n              key={index}\n              action\n              href=\"/\"\n              tag=\"a\"\n              className=\"d-flex align-items-center p-3 border-0\"\n            >\n              <Button\n                className=\"rounded-circle me-3\"\n                size=\"sm\"\n                color={feed.color}\n              >\n                <i className={feed.icon}></i>\n              </Button>\n              {feed.title}\n              <small className=\"ms-auto text-muted text-small\">\n                {feed.date}\n              </small>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Feeds;\n","import { Card, CardBody } from \"reactstrap\";\n\nconst TopCards = (props) => {\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex\">\n          <div className={`circle-box lg-box d-inline-block ${props.bg}`}>\n            <i className={props.icon}></i>\n          </div>\n          <div className=\"ms-3\">\n            <h3 className=\"mb-0 font-weight-bold\">{props.earning}</h3>\n            <small className=\"text-muted\">{props.subtitle}</small>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TopCards;\n","export default __webpack_public_path__ + \"static/media/spinner.e8697d57.gif\";","import { createContext } from \"react\";\n\nexport const ActionsContext = createContext(\n    {\n        scan: null,\n        write: null,\n        setActions:()=>{}\n    }\n);","import React, { useContext } from 'react';\nimport './Scanner.css'\nimport Spinner from '../../spinner.gif';\nimport { ActionsContext } from '../../context';\n\nconst Scanner = () => {\n  const { actions, setActions} = useContext(ActionsContext);\n    return (\n      <div className=\"scanner\">\n        <p className=\"scanner-exit\" onClick={()=>setActions({...actions, scan: null})}>X</p>\n        <div className=\"scanner-container\">\n          <img src={Spinner} alt=\"spinning log\" className=\"scanner-image\"/>\n          <p className=\"scanner-text\">\n            Scanning...\n          </p>\n        </div>\n      </div>\n    );\n};\n\nexport default Scanner;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useContext, useEffect } from 'react';\n// import './Scanner.css'\n// import Spinner from '../../spinner.gif';\n\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { tagAction } from '../../store/tagSlice';\n\n// const Scanner = (props) => {\n//   const tagScanStatus= useSelector(state => state.tagDetails.tagScanStatus)\n\n\n//   useEffect(()=>{\n//     console.log(\"inscanner.js file\")\n//   },[])\n//   const dispatch=useDispatch();\n//     return (\n//       <div className=\"scanner\">\n//         <p className=\"scanner-exit\" onClick={()=> dispatch(tagAction.setTagScanStatus(false))}>X</p>\n//         <div className=\"scanner-container\">\n//           <img src={Spinner} alt=\"spinning log\" className=\"scanner-image\"/>\n//           <p className=\"scanner-text\">\n//             Scanning...\n//           </p>\n//         </div>\n//       </div>\n//     );\n// };\n\n// export default Scanner;","\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport Scanner from '../components/Scanner/Scanner';\nimport { ActionsContext } from '../context';\nimport ScanDone from './ScanDone';\nimport TagRegister from './TagRegister';\nimport { useNavigate } from 'react-router-dom';\n\nconst Scan = () => {\n    const [message, setMessage] = useState('');\n    const [serialNumber, setSerialNumber] = useState('');\n    const { actions, setActions} = useContext(ActionsContext);\n    const[userType,setUserType] =useState(\"tagger\")\n    const scan = useCallback(async() => {\n        if ('NDEFReader' in window) { \n            try {\n                const ndef = new window.NDEFReader();\n                await ndef.scan();\n                \n                console.log(\"Scan started successfully.\");\n                ndef.onreadingerror = () => {\n                    console.log(\"Cannot read data from the NFC tag. Try another one?\");\n                };\n                \n                ndef.onreading = event => {\n                    console.log(\"NDEF message read.\");\n                    onReading(event);\n                    setActions({\n                        scan: 'scanned',\n                        write: null\n                    });\n                };\n\n            } catch(error){\n                console.log(`Error! Scan failed to start: ${error}.`);\n            };\n        }\n    },[setActions]);\n    const navigate = useNavigate()\n    const onReading = ({message, serialNumber}) => {\n        setSerialNumber(serialNumber);\n        for (const record of message.records) {\n            switch (record.recordType) {\n                case \"text\":\n                    const textDecoder = new TextDecoder(record.encoding);\n                    setMessage(textDecoder.decode(record.data));\n                    break;\n                case \"url\":\n                    // TODO: Read URL record with record data.\n                    break;\n                default:\n                    // TODO: Handle other records with record data.\n                }\n        }\n    };\n\n    useEffect(() => {\n        scan();\n    }, [scan]);\n    \n    return(\n        <>\n            {actions.scan === 'scanned' ?  navigate('/tags/register')\n                    //  <TagRegister tagId={serialNumber}></TagRegister>\n            // <div>\n            //     <p>Serial Number: {serialNumber}</p>\n            //     {userType ===\"scanner\" && <ScanDone></ScanDone>}\n            //     {userType ===\"tagger\" && <TagRegister tagId={serialNumber}></TagRegister>}\n            //     {/* <p>Message: {message}</p> */}\n            // </div>\n            : <Scanner status={actions.scan}></Scanner> }\n            {/* {actions.scan === 'scanned' && userType ===\"tagger\" &&  <TagRegister tagId={serialNumber}></TagRegister>} */}\n        </>\n    );\n};\n\nexport default Scan;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useCallback, useContext, useEffect, useState } from 'react';\n// import Scanner from './Scanner/Scanner';\n\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { tagAction } from '../store/tagSlice';\n// const Scan = () => {\n//     const [message, setMessage] = useState('Scanned');\n//     const [serialNumber, setSerialNumber] = useState('');\n//     const { actions, setActions} = useState(false)\n//     //const tagScanStatus= useSelector(state => state.tagDetails.tagScanStatus)\n//     const dispatch = useDispatch()\n\n\n//     const scan = useCallback(async() => {\n//         console.log(\"scannig started\")\n//         if ('NDEFReader' in window) { \n//             try {\n//                 const ndef = new window.NDEFReader();\n//                 await ndef.scan();\n                \n//                 console.log(\"Scan started successfully.\");\n//                 alert(\"Scan started successfully.\");\n//                 ndef.onreadingerror = () => {\n//                     console.log(\"Cannot read data from the NFC tag. Try another one?\");\n//                     //alert(\"Cannot read data from the NFC tag. Try another one?\");\n//                 };\n                \n//                 ndef.onreading = event => {\n//                     console.log(\"NDEF message read.\");\n//                     onReading(event);\n//                     //dispatch(tagAction.setTagScanStatus(true))\n//                     setActions(true);\n//                 };\n\n//             } catch(error){\n//                 console.log(`Error! Scan failed to start: ${error}.`);\n//             };\n//         }\n//     //},[tagScanStatus]);\n//     },[actions]);\n\n//     const onReading = ({message, serialNumber}) => {\n//         // alert(\"hi\")\n//         // alert(serialNumber)\n//         setSerialNumber(serialNumber);\n//         // for (const record of message.records) {\n//         //     switch (record.recordType) {\n//         //         case \"text\":\n//         //             const textDecoder = new TextDecoder(record.encoding);\n//         //             setMessage(textDecoder.decode(record.data));\n//         //             break;\n//         //         case \"url\":\n//         //             // TODO: Read URL record with record data.\n//         //             break;\n//         //         default:\n//         //             // TODO: Handle other records with record data.\n//         //         }\n//         // }\n//     };\n\n//     useEffect(() => {\n//         console.log(\"in scan.js\")\n//         scan();\n//     }, [scan]);\n\n//     return(\n//         <>\n//             {/* {tagScanStatus=== true ?   */}\n//             {actions === true ?  \n//             <div>\n//                 <p>Serial Number: {serialNumber}</p>\n//                 <p>Message: {message}</p>\n//             </div>\n//             : <Scanner></Scanner> }\n//         </>\n//     );\n// };\n\n// export default Scan;\n\n\n","import { Button, Col, Row } from \"reactstrap\";\nimport SalesChart from \"../components/dashboard/SalesChart\";\nimport Feeds from \"../components/dashboard/Feeds\";\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\nimport TopCards from \"../components/dashboard/TopCards\";\nimport Blog from \"../components/dashboard/Blog\";\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\nimport ComponentCard from \"../components/ComponentCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { tagAction } from \"../store/tagSlice\";\nimport Scan from \"../components/Scan\";\nimport { useEffect, useState } from \"react\";\nimport { ActionsContext } from '../context';\nconst BlogData = [\n  {\n    image: bg1,\n    title: \"This is simple blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg2,\n    title: \"Lets be simple blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg3,\n    title: \"Don't Lamp blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg4,\n    title: \"Simple is beautiful\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n];\n\nconst Starter = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch();\n  const[tagScanStatus,setTagScanStatus]=useState(false)\n  const tagStatus = useSelector((state)=>state.tagDetails.tagScanStatus);\n  \n  \n  const [actions, setActions] = useState(null);\n  const {scan, write} = actions || {};\n  const actionsValue = {actions,setActions};\n  const onHandleAction = (actions) =>{\n    setActions({...actions});\n  }\n\n  useEffect(()=>{\n    console.log(tagStatus)\n    setTagScanStatus(tagStatus)\n  },[tagStatus])\n\n  return (\n    <div>\n      {/***Top Cards***/}\n      \n      <Row>\n      <Col sm=\"6\" lg=\"6\">\n      <ComponentCard\n          title=\"Scan Tag\"\n          // subtitle={\n          //   <p>\n          //     5 premium and highly customizable demo variations included in the package, with React\n          //     Router 6, Redux Toolkit, Axios nd much more...\n          //   </p>\n          // }\n        >\n\n          <Row>\n            <Col lg=\"8\">\n              <div className=\"mt-3\">\n                {/* <Button\n                  color=\"primary\"\n                  //href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\n                  //target=\"_blank\"\n                  onClick={()=> dispatch(tagAction.setTagScanStatus(true))}\n                >\n                  Scan\n                </Button> */}\n                 <Button\n                  color=\"primary\"\n                  //href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\n                  //target=\"_blank\"\n                  onClick={()=>onHandleAction({scan: 'scanning', write: null})}\n                >\n                  Scan\n                </Button>\n                 {/* <button onClick={()=>onHandleAction({scan: 'scanning', write: null})} className=\"btn\">Scan</button> */}\n              </div>\n            </Col>\n            \n          </Row>\n        </ComponentCard>\n      </Col>\n      <Col sm=\"6\" lg=\"6\">\n      <ComponentCard\n          title=\"Register New Tag\"\n          // subtitle={\n          //   <p>\n          //     5 premium and highly customizable demo variations included in the package, with React\n          //     Router 6, Redux Toolkit, Axios nd much more...\n          //   </p>\n          // }\n        >\n\n          <Row>\n            <Col lg=\"8\">\n              <div className=\"mt-3\">\n                <Button\n                  color=\"primary\"\n                 // href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\n                  //target=\"_blank\"\n                 \n                  //onClick={()=>navigate('/tags/register')}\n                  onClick={()=>onHandleAction({scan: 'scanning', write: null})}\n                >\n                 Register\n                </Button>\n              </div>\n            </Col>\n            \n          </Row>\n        </ComponentCard>\n      </Col>\n     \n      </Row>\n\n\n      \n      <Row>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-success text-success\"\n            title=\"Profit\"\n            subtitle=\"Yearly Earning\"\n            earning=\"$21k\"\n            icon=\"bi bi-wallet\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-danger text-danger\"\n            title=\"Refunds\"\n            subtitle=\"Refund given\"\n            earning=\"$1k\"\n            icon=\"bi bi-coin\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-warning text-warning\"\n            title=\"New Project\"\n            subtitle=\"Yearly Project\"\n            earning=\"456\"\n            icon=\"bi bi-basket3\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-info text-into\"\n            title=\"Sales\"\n            subtitle=\"Weekly Sales\"\n            earning=\"210\"\n            icon=\"bi bi-bag\"\n          />\n        </Col>\n      </Row>\n      {/***Sales & Feed***/}\n      <Row>\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\n          <SalesChart />\n        </Col>\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\n          <Feeds />\n        </Col>\n      </Row>\n      {/***Table ***/}\n      <Row>\n        <Col lg=\"12\">\n          <ProjectTables />\n        </Col>\n      </Row>\n      {/***Blog Cards***/}\n      <Row>\n        {BlogData.map((blg, index) => (\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\n            <Blog\n              image={blg.image}\n              title={blg.title}\n              subtitle={blg.subtitle}\n              text={blg.description}\n              color={blg.btnbg}\n            />\n          </Col>\n        ))}\n      </Row>\n      <ActionsContext.Provider value={actionsValue}>\n          {scan && <Scan/>}\n        </ActionsContext.Provider>\n    </div>\n  );\n};\n\nexport default Starter;\n"],"sourceRoot":""}