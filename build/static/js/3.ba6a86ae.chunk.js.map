{"version":3,"sources":["components/dashboard/Blog.js","assets/images/bg/bg1.jpg","assets/images/bg/bg2.jpg","assets/images/bg/bg3.jpg","assets/images/bg/bg4.jpg","components/dashboard/TopCards.js","spinner.gif","context.js","components/Scanner/Scanner.js","components/Scan.js","views/Starter.js"],"names":["Blog","props","alt","src","image","className","tag","title","subtitle","text","color","TopCards","bg","icon","earning","ActionsContext","createContext","scan","write","setActions","Scanner","useContext","actions","onClick","Spinner","Scan","useState","setMessage","navigate","useNavigate","tagId","setTagId","userType","getUserType","useCallback","window","ndef","NDEFReader","console","log","onreadingerror","onreading","event","onReading","message","serialNumber","records","record","recordType","textDecoder","TextDecoder","encoding","decode","data","useEffect","status","Starter","dayjs","selectedDate","setSelectedDate","city","setCity","useDispatch","tagScanStatus","setTagScanStatus","tagStatus","useSelector","state","tagDetails","actionsValue","onHandleAction","total","scanned","left","date","Date","toLocaleDateString","body","moment","format","cityName","tagServices","getTagStatusForVisitor","then","res","prevState","totalTags","scannedTags","notScanned","catch","err","Swal","fire","response","sm","lg","ComponentCard","disabled","ComponentCard2","FormControl","sx","marginBottom","minWidth","InputLabel","id","Select","labelId","value","onChange","e","target","autoWidth","label","MenuItem","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","TextField","disableFuture","shouldDisableDate","nDate","getDay","pastDate","setDate","getDate","Provider"],"mappings":"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","file":"static/js/3.ba6a86ae.chunk.js","sourcesContent":["import {\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\n\nconst Blog = (props) => {\n  return (\n    <Card>\n      <CardImg alt=\"Card image cap\" src={props.image} />\n      <CardBody className=\"p-4\">\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\n        <CardText className=\"mt-3\">{props.text}</CardText>\n        <Button color={props.color}>Read More</Button>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/bg1.537e9bd5.jpg\";","export default __webpack_public_path__ + \"static/media/bg2.94ab4b60.jpg\";","export default __webpack_public_path__ + \"static/media/bg3.5668e1f0.jpg\";","export default __webpack_public_path__ + \"static/media/bg4.62319dde.jpg\";","import { Card, CardBody } from \"reactstrap\";\n\nconst TopCards = (props) => {\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex\">\n          <div className={`circle-box lg-box d-inline-block ${props.bg}`}>\n            <i className={props.icon}></i>\n          </div>\n          <div className=\"ms-3\">\n            <h3 className=\"mb-0 font-weight-bold\">{props.earning}</h3>\n            <small className=\"text-muted\">{props.subtitle}</small>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TopCards;\n","export default __webpack_public_path__ + \"static/media/spinner.e8697d57.gif\";","import { createContext } from \"react\";\n\nexport const ActionsContext = createContext(\n    {\n        scan: null,\n        write: null,\n        setActions:()=>{}\n    }\n);","import React, { useContext } from 'react';\nimport './Scanner.css'\nimport Spinner from '../../spinner.gif';\nimport { ActionsContext } from '../../context';\n\nconst Scanner = () => {\n  const { actions, setActions} = useContext(ActionsContext);\n    return (\n      <div className=\"scanner\">\n        <p className=\"scanner-exit\" onClick={()=>setActions({...actions, scan: null})}>X</p>\n        <div className=\"scanner-container\">\n          <img src={Spinner} alt=\"spinning log\" className=\"scanner-image\"/>\n          <p className=\"scanner-text\">\n            Scanning...\n          </p>\n        </div>\n      </div>\n    );\n};\n\nexport default Scanner;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useContext, useEffect } from 'react';\n// import './Scanner.css'\n// import Spinner from '../../spinner.gif';\n\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { tagAction } from '../../store/tagSlice';\n\n// const Scanner = (props) => {\n//   const tagScanStatus= useSelector(state => state.tagDetails.tagScanStatus)\n\n\n//   useEffect(()=>{\n//     console.log(\"inscanner.js file\")\n//   },[])\n//   const dispatch=useDispatch();\n//     return (\n//       <div className=\"scanner\">\n//         <p className=\"scanner-exit\" onClick={()=> dispatch(tagAction.setTagScanStatus(false))}>X</p>\n//         <div className=\"scanner-container\">\n//           <img src={Spinner} alt=\"spinning log\" className=\"scanner-image\"/>\n//           <p className=\"scanner-text\">\n//             Scanning...\n//           </p>\n//         </div>\n//       </div>\n//     );\n// };\n\n// export default Scanner;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport Scanner from \"../components/Scanner/Scanner\";\nimport { ActionsContext } from \"../context\";\nimport ScanDone from \"./ScanDone\";\nimport TagRegister from \"./TagRegister\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { getUserType } from \"../services/common\";\nconst Scan = () => {\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const [tagId, setTagId] = useState();\n  const { actions, setActions } = useContext(ActionsContext);\n  //const [userType, setUserType] = useState(\"scanner\");\n  const userType = getUserType();\n\n  const scan = useCallback(async () => {\n    if (\"NDEFReader\" in window) {\n      try {\n        const ndef = new window.NDEFReader();\n        await ndef.scan();\n\n        console.log(\"Scan started successfully.\");\n        ndef.onreadingerror = () => {\n          console.log(\"Cannot read data from the NFC tag. Try another one?\");\n        };\n\n        ndef.onreading = event => {\n          console.log(\"NDEF message read.\");\n          onReading(event);\n          setActions({\n            scan: \"scanned\",\n            write: null,\n          });\n        };\n      } catch (error) {\n        console.log(`Error! Scan failed to start: ${error}.`);\n      }\n    }\n  }, [setActions]);\n\n  const onReading = ({ message, serialNumber }) => {\n    //alert(serialNumber)\n    setTagId(serialNumber);\n    for (const record of message.records) {\n      switch (record.recordType) {\n        case \"text\":\n          const textDecoder = new TextDecoder(record.encoding);\n          setMessage(textDecoder.decode(record.data));\n          break;\n        case \"url\":\n          // TODO: Read URL record with record data.\n          break;\n        default:\n        // TODO: Handle other records with record data.\n      }\n    }\n  };\n\n  useEffect(() => {\n    scan();\n  }, [scan]);\n\n  return (\n    <>\n      {/* {actions.scan === 'scanned' ?  navigate('/tags/register') */}\n      {actions.scan === \"scanned\" ? (\n        //  <TagRegister tagId={tagId}></TagRegister>\n        <div>\n          {userType === \"scanner\" && navigate(\"/tags/scan/\" + tagId)}\n          {userType === \"tagger\" && navigate(\"/tags/register/\" + tagId)}\n          {userType === \"admin\" && navigate(\"/tags/register/\" + tagId)}\n          {userType === \"superAdmin\" && navigate(\"/tags/register/\" + tagId)}\n          {/* <p>Message: {message}</p> */}\n        </div>\n      ) : (\n        <Scanner status={actions.scan}></Scanner>\n      )}\n      {/* {actions.scan === 'scanned' && userType ===\"tagger\" &&  <TagRegister tagId={tagId}></TagRegister>} */}\n    </>\n  );\n};\n\nexport default Scan;\n","import { Button, Col, Row } from \"reactstrap\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport dayjs from \"dayjs\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { TextField } from \"@mui/material\";\n//import { DateAdapter } from '@mui/lab/AdapterDateFns';\nimport SalesChart from \"../components/dashboard/SalesChart\";\nimport Feeds from \"../components/dashboard/Feeds\";\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\nimport TopCards from \"../components/dashboard/TopCards\";\nimport Blog from \"../components/dashboard/Blog\";\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\nimport ComponentCard from \"../components/ComponentCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { tagAction } from \"../store/tagSlice\";\nimport Scan from \"../components/Scan\";\nimport { useEffect, useState } from \"react\";\nimport { ActionsContext } from \"../context\";\nimport { getUserType } from \"../services/common\";\nimport tagServices from \"../services/tagServices\";\nimport ComponentCard2 from \"../components/ComponentCard2\";\nimport Swal from \"sweetalert2\";\nimport moment from 'moment'\n\nconst Starter = () => {\n  const [selectedDate, setSelectedDate] = useState(dayjs());\n  const [city, setCity] = useState(\"\");\n  const [date, setDate] = useState(dayjs());\n  const userType = getUserType();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [tagScanStatus, setTagScanStatus] = useState(false);\n  const tagStatus = useSelector((state) => state.tagDetails.tagScanStatus);\n\n  const [actions, setActions] = useState(null);\n  const { scan, write } = actions || {};\n  const actionsValue = { actions, setActions };\n  const onHandleAction = (actions) => {\n    setActions({ ...actions });\n  };\n  const tagCount = useState({\n    total: \"\",\n    scanned: \"\",\n    left: \"\",\n  });\n\n  useEffect(() => {\n    console.log(tagStatus);\n    setTagScanStatus(tagStatus);\n  }, [tagStatus]);\n\n  //post request for visitor tag count\n  useEffect(() => {\n    if (city !== \"\") {\n      const date = new Date(selectedDate).toLocaleDateString();\n      const formattedDate = moment(date,'M/D/YYYY').format('D/M/YYYY');\n      const body = {\n        date:formattedDate,\n        cityName: city,\n      };\n      console.log(body);\n      tagServices\n        .getTagStatusForVisitor(body)\n        .then((res) => {\n          console.log(res.data);\n          setTagScanStatus((prevState) => {\n            return {\n              ...prevState,\n              total: res.data.totalTags,\n              scanned: res.data.scannedTags,\n              left: res.data.notScanned,\n            };\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          Swal.fire({\n            icon: \"error\",\n            title: \"Error\",\n            text: err.response.data.message,\n          });\n        });\n    }\n  }, [selectedDate, city]);\n\n  // useEffect(() => {\n  //   console.log(body);\n  //   tagServices\n  //     .getTagStatusCompleteDetails(body)\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.status === 404) alert(res.message);\n  //       else setTableData(res.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err.response.data);\n  //       Swal.fire({\n  //         icon: \"error\",\n  //         title: \"Error\",\n  //         text: err.response.data.message,\n  //       }).then(() => navigate(-1));\n  //     });\n  // }, [body]);\n\n  const citChangeHandler = (e) => {\n    setCity(e.target.value);\n  };\n\n  const disableDates = (date) => {\n    const nDate = new Date(date);\n\n    // Disable future dates\n    const today = new Date();\n    if (nDate > today) return true;\n\n    // Disable Sundays\n    if (nDate.getDay() === 0) return true;\n\n    // Allow only the past 3 days\n    const pastDate = new Date();\n    pastDate.setDate(pastDate.getDate() - 7);\n    if (nDate < pastDate) return true;\n\n    return false;\n  };\n\n  //  const CustomDatePicker = () => {\n\n  const handleDateChange = (date) => {\n    console.log(\"!!\",date)\n    setSelectedDate(date);\n  };\n  return (\n    <div>\n      {/***Top Cards***/}\n\n      <Row>\n        <Col sm=\"6\" lg=\"6\">\n          {(userType === \"scanner\" ||\n            userType === \"admin\" ||\n            userType === \"superAdmin\") && (\n            <ComponentCard title=\"Scan Tag\">\n              <Row>\n                <Col lg=\"8\">\n                  <div className=\"mt-3\">\n                    <Button\n                      color=\"primary\"\n                      disabled={userType === \"scanner\" ? false : true}\n                      onClick={() =>\n                        onHandleAction({ scan: \"scanning\", write: null })\n                      }\n                    >\n                      Scan\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n            </ComponentCard>\n          )}\n        </Col>\n        <Col sm=\"6\" lg=\"6\">\n          {(userType === \"tagger\" ||\n            userType === \"admin\" ||\n            userType === \"superAdmin\") && (\n            <ComponentCard\n              title=\"Register New Tag\"\n              // subtitle={\n              //   <p>\n              //     5 premium and highly customizable demo variations included in the package, with React\n              //     Router 6, Redux Toolkit, Axios nd much more...\n              //   </p>\n              // }\n            >\n              <Row>\n                <Col lg=\"8\">\n                  <div className=\"mt-3\">\n                    <Button\n                      color=\"primary\"\n                      // href=\"https://www.wrappixel.com/templates/xtreme-react-redux-admin/?ref=33\"\n                      //target=\"_blank\"\n\n                      //onClick={()=>navigate('/tags/register')}\n                      onClick={() =>\n                        onHandleAction({ scan: \"scanning\", write: null })\n                      }\n                    >\n                      Register\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n            </ComponentCard>\n          )}\n        </Col>\n      </Row>\n      {(userType === \"visitor\" ||\n        userType === \"admin\" ||\n        userType === \"superAdmin\") && (\n        <Row>\n          <Col sm=\"6\" lg=\"3\">\n            {/* <TopCards\n            bg=\"bg-light-success text-success\"\n            title=\"Profit\"\n            subtitle=\"City Name\"\n            earning=\"Delhi\"\n            icon=\"bi bi-wallet\"\n            > */}\n            <ComponentCard2>\n              <FormControl sx={{ marginBottom: 1, minWidth: \"100%\" }}>\n                <InputLabel id=\"demo-simple-select-autowidth-label\">\n                  City\n                </InputLabel>\n                <Select\n                  labelId=\"city\"\n                  id=\"city\"\n                  value={city}\n                  onChange={citChangeHandler}\n                  autoWidth\n                  label=\"City\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value=\"Hisar\">Hisar</MenuItem>\n                  <MenuItem value=\"Sirsa\">Sirsa</MenuItem>\n                  <MenuItem value=\"Delhi\">Delhi</MenuItem>\n                </Select>\n              </FormControl>\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                  value={selectedDate}\n                  onChange={handleDateChange}\n                  renderInput={(props) => <TextField {...props} />}\n                  disableFuture\n                  shouldDisableDate={disableDates}\n                />\n              </LocalizationProvider>\n            </ComponentCard2>\n          </Col>\n          <Col sm=\"6\" lg=\"3\">\n            <TopCards\n              bg=\"bg-light-info text-into\"\n              title=\"Sales\"\n              subtitle=\"Total\"\n              earning={tagScanStatus.total}\n              icon=\"bi bi-bag\"\n            />\n          </Col>\n\n          <Col sm=\"6\" lg=\"3\">\n            <TopCards\n              bg=\"bg-light-warning text-warning\"\n              title=\"New Project\"\n              subtitle=\"Scanned\"\n              earning={tagScanStatus.scanned}\n              icon=\"bi bi-basket3\"\n            />\n          </Col>\n          <Col sm=\"6\" lg=\"3\">\n            <TopCards\n              bg=\"bg-light-danger text-danger\"\n              title=\"Refunds\"\n              subtitle=\"Left\"\n              earning={tagScanStatus.left}\n              icon=\"bi bi-wrong\"\n            />\n          </Col>\n        </Row>\n      )}\n\n      {/***Table ***/}\n      {/* <Row>\n        <Col lg=\"12\">\n          <ProjectTables />\n        </Col>\n      </Row> */}\n      {/***Blog Cards***/}\n      {/* <Row>\n        {BlogData.map((blg, index) => (\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\n            <Blog\n              image={blg.image}\n              title={blg.title}\n              subtitle={blg.subtitle}\n              text={blg.description}\n              color={blg.btnbg}\n            />\n          </Col>\n        ))}\n      </Row> */}\n      <ActionsContext.Provider value={actionsValue}>\n        {scan && <Scan />}\n      </ActionsContext.Provider>\n    </div>\n  );\n};\n\nexport default Starter;\n"],"sourceRoot":""}